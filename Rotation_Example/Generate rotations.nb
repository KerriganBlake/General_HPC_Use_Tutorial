(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     87395,       2307]
NotebookOptionsPosition[     82361,       2222]
NotebookOutlinePosition[     82719,       2238]
CellTagsIndexPosition[     82676,       2235]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
The best way to keep track of rotations for solid objects is by using \
quaternions. However, rotations are more intuitively generated by specifying \
a vector about which the rotation occurs and a magnitude of that rotation. \
Here we\[CloseCurlyQuote]ll use Mathematica to generate C code which will \
convert such a rotation into a quaternion.\
\>", "Text",
 CellChangeTimes->{{3.694471732428337*^9, 3.6944718751673183`*^9}, {
   3.694472002371709*^9, 3.69447201477958*^9}, 3.6948926447426662`*^9, {
   3.694900165380122*^9, 3.694900174811631*^9}, {3.718921220001327*^9, 
   3.718921358127262*^9}},ExpressionUUID->"5428a1ed-65da-4922-a85c-\
df165c41822d"],

Cell["\<\
Can use the quaternions package to define quaternions and their \
multiplication
http://reference.wolfram.com/language/Quaternions/tutorial/Quaternions.html\
\>", "Text",
 CellChangeTimes->{{3.6948885457590103`*^9, 3.694888565040723*^9}, 
   3.694892719127884*^9, {3.694894541142036*^9, 3.694894545224688*^9}, {
   3.694985802844795*^9, 
   3.6949858030147667`*^9}},ExpressionUUID->"49a6dd81-2915-4f13-9012-\
c587b4d92aba"],

Cell[BoxData[
 RowBox[{"<<", "Quaternions`"}]], "Input",
 CellChangeTimes->{{3.694886240245954*^9, 3.69488624518748*^9}, {
  3.694886304655385*^9, 
  3.694886304960005*^9}},ExpressionUUID->"31ebcee2-190b-4b2b-8aee-\
34c48d3ef799"],

Cell[TextData[{
 "Check Mathematica\[CloseCurlyQuote]s math is what I think it should be. \
According to https://en.wikipedia.org/wiki/Quaternion#Hamilton_product, we \
should have\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnWm4JEWV908DsrUNDQ00AkLTAgKiosi+gwINqGxN06CyyK7DTgP6jjbD
AC0KKHSDCjLN4oICbiMoOOMsCigyj+My+GlAmI8zwzifUd76vXHOW1FRkVmZ
WVm36t57/s8T3bcyIyPjxHK2iIyz4zmXnnT+OiJy5Yadf046+5rDr7ji7OtO
nt/5sfSSKy+64JLzzl1yyVXnXXDeFfuds27n4v/ppBvmiKwnDofD4XA4HA6H
w+FwOGYQ5oy7Ao4Zjfd30gbjroSjEd7QSR+skf/tnbTXiOriGC2QA0d20lbj
rohjRmJFJ60edyUivLeTlnbS6TI7x/ybJdB/Wie9p0J+lofWdNK1FfIe3knP
6jsmAdt20ikSaN17zHUZB+g76F/WSUv09yAc20m/76Q3jrBejtkH5uBvO2nj
cVdEwfj+RSf9Tye93klbjrc6Uw50/Ps66Q8S6D+94nMLO+mZTrqgJM8OnfRy
J71vmAq2CHTc2yXUCVqvGW91xoIPSJDN0P/tTlq/wjPkubGTHpEwXhyOYTGv
k17ppFPHXZEEW3TS7yTMkdmo+zDX0fPhDzvVeO5MCf25WcF9ynxMqumeUwXq
8lkJtO435rqMA9B/gAT6b6zx3Jsk9PXyUVTKMeuATwGeO2n8Fh2XubFm3BUZ
E+gP5OC/Sb2+eaM+k/MVIVNe7aSjh65du2CN6kkJtsGmY67LuHCdhPF+TM3n
bpJgC06KTe+Yntiok37USXdVyDvVeuQZEubGMn33OPZN8N51xvBOaGWNBPof
lHq027oBciTlD/hfymwGw1TTvEBCvfB38CnMuGyWcXyGwzvx8TzaSX/spM1r
Pn+QhHGyT8v1cswu4IdnHJ1WkmeXTvpkJ31JwrrWuyXYpqMEvG+11u28Tvq6
BP42VWud+NThm1+VICffOQXvhCecru+E1osl0H9hg7LOlP51FsqH3zwlxTxv
I30ffY2vAttsKmyIoyTUFz/RFyXIv7Ix2Sbgw8dLoPkhCe0+Fdi3k+7Wd54g
QRbSN3X38TEXkSGzcZ3F0R6wR5mDRfP9CAk+BWTBzhJ0TX6P2m/DGsa/6buY
L/g2HpT6/pImOEzCOjo07qz/s4ZdV1+rA9YGWDPE1ke/WyWhX17XOtTFu/TZ
eA1onpZfZAMiNx7VetDeyAJ4zFT4bW6WUF98lewjOlF/nzLi97ImxdoJtjHt
znxgzI3a/36lhH0BH+6kQzrpN1J/rcCATfV0J90p5fYc99A1lldMyGI/rmD2
gLHBGNw6cw9+AA+M95ku1fzxXEGHR7c6RNrbz7CLvuex6Bp84c/S3VPDe9Gh
Dm3pnfZeaDZ+uUDrgc42X6/hv8AuX9jSOylvrQS++xa9hn4OX0T2zYvyrqPv
PXBAmdtLqPcZ0bXN9Vpu3zDt+HcS6NxEr22i+ZEPcb/u2UnnStAT2vDl8G70
YXjjjnptrgT+iM9ofU34Cs+RQFsbMJqR+4uk1xZdpnmwB6EVvb2tsb1M37Ei
unan9K8VoO9DL3Jxm5LybF3p51JuU1DGPQUJm+jLSfrSgPc6ZhbMJ5/u32fu
PSr9eqntazE+yPxgzYs5+ydpT3c+X/r3Uto1bHj223+zk/65k26Tdvzb+NbR
m+HJ8b4dvnOA/8D3WI/9lgRaT2jhnYB9M9D1gHTpWJi5Bg+B5n+XQHMZzPd3
beZaTvdcrvduytTruugavqcvSOBPv9b6DCsPGDO0OXJ//ega76Y/kMG0+dmd
dL0EWT1IFlbBRdLfRuhEZiMj7++XQOvjEnTvKns9y4CMszFmazbMoW/rtQV6
DTnAWjpjjP22r0ixX5bn12q5Gw14f511J/+ueXbBZEGq4xrfiPcnGK/8nfSu
STK+GadtygLTz2IZdb901zawXdGXb5P2ZMHWWj46atGcn6v52pQFRuv50TXj
zRdF19D5aN+fymBZYLTEvH2LzDVAW1rbxuuP10jvHk/e/zMJPn34xF56/4gB
dRmEo6WfJ8fyEV78YiftJqGfH9Z6DPN9vNkiRT442uSJTrpFgqzbQfOeM8Q7
gdH1mHT9L8iEdK3g0530T/qbhI2E/p7jzxtoedgGcwe8f8OozEFpWLnnmF4w
npPKApuf+Eps/MX7Wpgf+0b50WfKZAFlVPU9ks9kjq0NzNXfL0tXd6IOg2RB
HX6BjCnyocTl4zsfJAuqziPyGU96a3T9Lr2Gzwr+Ybo3c7mKLDDeFdtVxnPu
TPLSxqarWv+haz4WXeO7NPrlc510qeaZq+84uYCuqqDd8f0tja7dpGXzzdzu
EvRy0wvgz9iDqQ48R6rrstgav9W0SeY+5VwmgV7zRb6uv1PUodXm283Rtf2l
a68xD5Gx2CTQvJ6+/6eacnOI+j+rqawuizrp+RrplxLWnRyzA/Dz3J5m9PzX
OunW6NrHpTs/0Vdvie6ZLMjtVWQso/PZfsFBgO+hDzK2jZfbPpOLkny3aR1z
PABfJ3b2uRXeCXbTd/x1ch37AzvdbCGTBR8oKIf2waeRW4NJgYzB7/ZaVD7v
g0ch++gHvr82+Wey4FYpx2HSvyfA/BOxfAfwVHzN8FfrH3xk+O+fUjpe0HrF
/JbxgL9mu+TdrN88onWoApPBu0T1hHZ8+RvqtfWi/38l/TyZsbBaUxWfldm4
jLFUplCfs6SX1iVaxz2TvG+TsO5cdY0bP99rSX5bN+cdzCkb40YHMvBVrVMO
2Hv4r1ZLuSzk3jY10rYVaXLMDKDzoSumZxYwP+BB8AJ4H/tRmJ+2Hvlj6T0j
B171Z8nbBciHP0m/H6AM6E/wGXRCfMP/Kr26FCizCxj3n9f3Vt0DhC78HQn+
B/wG8EDmLnzwqigf7QGtObsAHRueCq2rKrwTGJ85ToJt8F0JfBhehbxhz6HR
t6HWb5BdcIn07ymlTZADOf0R/mPtDe20w0sS/NDXZGiBP9Enqd+eet6h70YO
D/JZAMbHf0iQwfz9ba1j7gwqwnE8LP39jT5tY6zqHiDGNDTT7owP9CHa5xfS
q9MwzpA/H8uUsUbfi706P3M/BTr8C/oc74Rmm1d7670FyTPsp/5mSZnwbd9T
6hgW9o1LvEZpYH6hazwnwUcMH8K/wFxJde0yWSCaH1357hp1Qz6hr35D8vN7
kI+IOjHnkHVVz7ajPZA52MfQjf6ZnpVWJgsA/nPsCGit6heDL6EH/60EXZ7z
COClyNyYn1eRBeb/f1K6erUBnxH8L2e/sSb/9xLaG5oP1zIYG7Guzd/40g/R
v9N3YMswbuDpVfei7iHBJ/UTCf6hnAzhDF2TA+j1qQ5M/R+Ret8HYAN8T0Jf
f1d/x/TwDvz0dv5rWi/GFbKPMVb1zCz07bWd9A8SZBtjjvZirKdj6nLp9cnl
wBl1/q2Zow0w/tHLcnoNcyGd6+lvMEgWgKuld09KFWCfFNn8VdYL0NPhb3X3
x28gxXsyBskCgO/7izXfia6+XvI73cdYRRbYN7wrMvdMBz+24FnKj9ubdojb
lr+xtzgvGX6MvM59E4bf4jnJj5UivEGK13cOlsA/4YeM07sKykb+1j1Xi3aG
ltw443zAo/S9/J+uuwN0/V9Kft2hCKkMZZ6l4w3b7ip9N+2ZymQrBzkS+1Md
jqZgrKGTNPnO085RP0sCf2SfxRHSr7MxTuHJTb6bygHd8yQJejRrbCdLfs8d
PLnuGQ5l4Jtr+85hpQRaUznEb3TMfaVdvEMCnfhm0I+hP7U7oBMewnpD0Td5
yGNswSb7RNhzzp4WW8tEH81934Ec+kSD8nMgzsKL+j7kIP6YH0o/7TaOq/hq
quAyfZe9F1pz8h/ZU8ferQJsslejd/N3Tv6z1xk7r+4ZRg5HEdgngq+y7nc8
8D18GvDckzUdI/26JDZBuiY7DDiLYpm+z859T9cw0YFZU9uhpXfCZ/fT99l7
07PmycPe0LXS/v5s9nRYO/NueFCqC+Lvh1eXnRuBDow/allJnhysr0+JEnVI
dVXaCP5VZa2gChiTRrOlNAYPdbhXwnklbYC+e5/005r6GrGDkUttjTHDe5J3
k96R5KF9+dZjrfi3AI52gZ6JPjuKc8na4gt1Mepzk3LAnh/H3ETPx+d+6aCM
EnzW+HDastNiwJfHEW9iXN/Ijmtsc34F9t0knT3umDlgX4jrGNMT9Fud9UPs
qD1GVBfH6MH5GFN9nqzD4XA4HA6Hw+FwOBwOh8PhcDgcDofD4XA4HA6Hw9EE
fKPtsbEcDodj9oI9q5xJtGjM9RgXOFOD80A416vpNwjIUr5X4XsN3+s9fsR9
OkysXfqSb2Hp11HGznU4xg2+FeYcjKPGXZExgbm+Vroxq9dIfV7O+UavRmVU
PV/RMRrQf5+Rbn/UPW8sLoezcf+s5XDWZ51zuxyO6QTOS+Os1Nn8LRRnfXxS
6p2jnYKzVji7nLjXw+ihjnZAn3J2ucVXbArsi3dKcewsh2MmgDg4nKff9tl8
0w3of5wtmsaRqAOLJfhAW5VyDAX6lLMuc7Eg68LibQ8jUxyOSQbxHzhDeeNB
GWc4iAOHPj9MWxBvIo2F7RgfLOYefTrseoHFGHffn2MmwmJHltm9nKVGPNG/
kBDrF3u5KFbEIKCbfUiCD4b9Sls0LGcUIEadxQwnXgT13KX0iX5Y3Ov3Smgv
dMhJ25fF+jbn9VI//OBN/ILWj8RNnbQYy2+REMvRYm+nceCrgnZinF6s5ZhM
GdfZhg5HDHj3whppUGwA9kTgHyqKWQTf5yxV4gwwJ5AbnPlMzOC662fMK2KB
4pO/W8tkno7jbNocLpRQH+Y8MXCIDUisgXdWfN7k6ksSYn8QEwIa2Zs1KfKA
+HfsEbCYcMThw59VlU8iNxgrtBH9CI0vSdARJgEflRDDghivxO4gRlST9R/O
/PytlkEsu2eku6fA4Rg3mK/Mv3/JpOcLEr7SMj5EjOgiHyhyAD7GvLcYm++R
7vpZyj+wH4r2252qz50e5WV+IYfieMHEd9hRggybynVs3mVrBRZnBt4OPyAO
ZxxHiLO2c7xzoT7/wyg/7cr+E4tPgT21WOrH7WsDxHFCtrG3hvqzZ4z6Itdj
n9ibpFg2IMPpMzsfebWWcaHeHyd9p0k3vjtgLD2r17ZO8tLfResHnAvPfrDY
Vjb/UCxTmFfEwdhMJkfWO2YPLHZw1TQoFho8qkgWmO87jr1p883mPvwA+fBp
CfHmT86Uw1xBP2Nemm8JXoH+9pR07QvWaznfn3gv8OCvyOCz/nn/cq3XoEQs
oCL5Mk/fGfsAuIYcfFrrC+8k/g58ImdvpW0jWjeu4U+B9yBX7lDaV8pgfXzd
irRZKsImSssrShfAP4eei/8DXnZKRF8u/qfFaY7jhh6pv+cMQd+yirSVxXKa
r++ERus/1geeld61AvZ5EZP665KPtWvx5KFzJ71GnnT9mfa6T2k1W9nlgWM6
g71DjPE05jA823SqOH7OGr0W+9GRBfDJP0mIr5TC9l/EPGTX5Bo843oJNjlz
b5EEHfbyAfXHpiDW/b0V0pclxN/Mweyj2Aews15DXtEeyM0rlM6cLLC2ybUX
cvWb+rzJT64fMYC+g2rSV+S3M5mUrgsZr4aPMQauVPpSWWA2ImXsnSl/3YS+
vSrSd2BL9F0g/f1nfRrHzEUWMEZvl7wssD5/MnpXvKfAZArxVL+hdHMN3+dK
8e8LHVMH+NHdNRI+/rLxiT8g509Fl8cXwPg3PXKu/mZewCvi9WPmQ5EsMH64
JLp2sV5D18R2YU5+qpN+rb/hPcQOvnVA/UWfnVMhlfmc0Dnx5cTtYOsHN0fX
Pih5WUCd0Q/RS41fbKy/kWnok/CyH0jguxvp+3IxkVNUoY1UZkPdJNX2Q54o
eVnAb+wmdO+c/4e2TenjfVNFXyxzDfGerjdIV29fV+uVkwUmM++Kru0ivd8f
4ns6S0K/bqxl/EzTGyrQ63C0AXSyM2sk9omU8VL8BIzzi5Lr+P3xJ3wrurZY
866VoD/x/aXJA5MFJ2bewbx6Tbr8cx3pfuOLX4i16f2kO88AOh2+iirxP9uA
rWe8T3/DN/AV0AabRflMFqS8cn3Nj6w0fmA2l8mS9aJ7b9N7J7RGQTlulu7+
phjI96XRb5MF85J8/DZ/S6qbMyYPlfHTxxhbHF17SOvA/jDWgo7V6yYL0DNS
WXCalhO3ycelK2euke56i419aH5J+uUeefCv5vymDsekwXT9dH8EPNl4G7oP
sgGezZz4Kwl7Sa6N8iML0HNzdoHpWgdL4CM8h06FHo2v+u+kf5/eLZ30sEzd
+vGWWidkIrRjt2AXHZbkQxZAZ85HRJv8Vu/RXk9Ifg8RPAL9+Z52ql4JyG7b
L4bc2lSv0b9XRvmQBdCXWy/AtsAXsquWgX8Oewo78YAon9H3sEydzwRfE2Ps
eAnj9Sr9/ZIEvYJY4SbfyuwCxgHtxB4NxgE+Lmwh2gS62R+W+sjI+xvp3QMB
jtbn0GlGEafc4Wgb+JLMJx4D/xF+0xc66W8l6MxrJcwNrm8Q5S2TBfADeNDP
tRzex5qjrdUeluRn3zu+WObpoLXvNgF9+HT+QUJ75PziZbIAno/++YKWgXzN
1R9f86f176n0KcDnoe85TewrTdeJymQB/XiXPotN+HsJfbljkg/6VurfU9V/
1A2dnfH0jxLOHjI+zrVYNy+TBeBIfeYnnfS9TtpTuv6/G5O8yCB8Y8iQlFb8
gqwpIz+XisMx+WBvOLpQ7ruvjfS66e3MHfSfDZJ8ZbLAgK8l5qHzpZ+nHiZh
XY/5Cj/K7V0dJahPjj5DmSwA1Jv2ou65esMnL9d8fLfw18NUtgGol521mdv3
UiYLDHZeZ27d4DJNRt8XhqlsA9iYsranjpsleQbJAgD99KPxd8b/AuntU+QA
e92Q59gij0n/mgbP46s6WhyOyQd8D1/GikEZC4Dfh/kGDzlb+n3NVcGeGdaL
PyfBl8ta3MqGZY0CyDuTBZxDUPdbO57Fl2D08XdufWVcgD6TBfD6InlYhEmn
D5iOwX419HlkRRM/JN+YoO/fqulxya+T867nZDzfWzgcTcA6JzbwDg2e5dse
9L/b9X98I3X5JPrWqVpGnN7RoD6jALoffmGjk33lrHtU5SPku0L66du99Zo2
A3w/pe/DUu975Emmz8B5GdiaVj/+fneDcpZKP62p3KPt/kZ6vzdxOKYD2EPx
Hanvw073bTb16fDsukmaJMT0WaoDp28yYHQOM1Ztj2uccmUd2LB8h2PcOFcm
76wxh8PhcDgcDofD4XA4HA6Hw+FwOBwOh8PhcDgcDofD4XA4HA7HzAX7u/km
zc79nSTYmalV4gE5+sE3Kta3kwrO4Jj0OjocMx3MQ775fEbTceOtTh84p5Tz
yYhpRuzcSf1uahLBGVacPWt9O4lndFJHzh+c5Do6HLMB6N2cpW/nYL91hO9q
wsc5+4Jz46jbtQPyTgomRV5h43GeSFnsm3GD8cd525NcR4djtgD7nLOvOQdp
VHMR++NOKT5XtAycgYwsmA5nTNqZrnXPkxsVLC4esn5SfWzToY4Ox2yAxQ1h
Lo5qvQB580sJ8UzqAN5AvahfeubxJIK2hM43Dso4RUB+IkevG3dFSkAsvUmv
o8MxHYCuvZv+b2d91QExB5mL6N/wavxEuTP1hwF+4SaywGJ8YrcQ04fzNpvY
FoAzvKFtS/09Ct19WFlAu3M+P7Ept2pYho0H6mIxNfdvWNaoENcRGdC0jhtq
GYyLNJ6ZwzGbQKwDYltxBjxrb3bWcR2ftcVjJ27g9yXEA0MXb1MeMGc5P76u
LDCdkVhsFt8K3/K2Ncs5RkL7fE/LIj7oj6T9vSvEXaE/msiC7SWcrUw7ca4/
a6rn1SzjYxJiXUInMvRp6Y8VPW7k6tjE7ttJQhzw5yXET2PcHtleNR2OaQHW
3D4hYb3NzqbnrGv45lrJn9ubu2b7OIgxvETzEMuGOCorknxp7M064NkmssB0
Rs7xR76xnoEsSH3LZbbQURLo+4DmW6y/WR+JeTblEzdrGHsBXf45qS8LttH6
PKZ14Cx/4vMiv+J2L6OT8QBdnM9MP54loe3o35gm26M7jjVu+jOu45mSr6NI
+TnWh2g56DGMg6VaDmtSRtewY9bhmA5Az0331izTaxdH15jzh3bS1zrphEw5
6LHoZPdLdw7Bz5AFrIHCe66XIF/Qo4kPPOiseeb0lkl6swTfye6Ze0U+H/bG
Pyq9OiP2BfzR9pzg94HHE+N980wZO2reR6UbDwKaaacHIpp59gtK5xNa5iBs
mqFlN6VzUeZekYzhOrzwFemu3b9d6SQ+8By9Tkybf5ZunNMY+ytNq6NrB+i1
m6Nr8GD45SMSYllvKYMxN0NLUSqzs3J1tGtxHZGjjFn69JBMObQFcpO9xsbr
2QtHex0sob3iMXtZBRodjukI2/fDHNo1ur5Kr+2iv+HjH5KwJ/NPko9zaGsF
V0fXzL4gvjq8iJiB+IuwydHFPjqgfpT1fJLgj/+l/6f3HpK8PypeKzAbYDO9
9jv9+xpN0JfzF5v/65oMzRfob3jHvRL8C7znHKVzzxIa4d9fy9BC+s8COq+V
vBy1+jyQ3Dc+x7vg3/cpnWnsUmSc7QmOfe5mUx2jv3mOeKXIenj2E/q7zA6i
Pp8roDOXPlNA43oV64hspq9uVFo/mCnL9pWlsWCNDuK73qDv3EtCX55TQqPD
MV0R80PjC8iHp6S7LzSOiUaeIlnAnGNe7RddM5lCTMCV+vcmWia843Epj7m2
rr4zTvAf+OPizL0iXfKt+u5V0TXTI2M9f3PJywL4+relVz4CW09Fh7dvXtG3
f6plztP7l5fQKPpcSsti6a6Rp/eK1l+sPqcPeB/9l5MF2FXYPrFdAV+0/Ve0
D22xY0LX2fp70Fq8tUmVVLQnNFfHeI/YguTZ+ZKXBYytB6R/zBqQQ7dJ75il
Xx+Wyfnuw+FoC+bj+FZ0jfmO/sPcYh7h8zFeWSYL7tCyzL+CLoo/HpnCXMK2
OEjvMc9+JWFe1Y1J2GS9gNjP+KpOi66Z7Iq/NSiSBfBq/AgvSpd/wiPxG7yi
+R+UQOeuUd220XecVaOuhibrBav1fftm7m0f/V0kC2x/PnLa5I3ZVE/pfWw8
aMfnYn33lxLGzFTsf52v9YnraDrNU1rf+LuMIlkQ2xc52b+Nlvv2KD9j9h7p
H7O0d5O44g7HpABe8EPp7vWB58e+EHwfn0nyM69y6wXHSXdeMVfwKcFXDs/k
PV4C73hTgzo3kQVb6vsu0t/ss/yD9NoJwGRBul4APTfqM/P0N+sAZlfA/zmj
IfWR4BOhfZvokU1kwRLptQvoU3z08O97pMs7kQWvZcrGrkK+IfcYC/DET2qZ
rIGcL2GfTQzaFhl5aY16DoO4jutrYq37z1pH5P2XovzIAmjNrduYj2g3/U1Z
yEz6lLESr6+/v5Ne6qTtkjL21nej90zKtyAORxPAq7G58bWzNw9ZwLhGx8K/
Hus78EHG/UmZcuAd+FF+LMH/jZ52VCYf/B8/Cj6aJt+jNd1HhE8YuuBl7EPE
v5zqd8gA6MutF1Bv9hp+RwJ9X5XAM34toZ3em+SHd7CmihxoQmcTWQA9+Ino
zzVaR2TUndJLa5FdAA6V7nhg7y3ykrXUZzUtTt6HbfdxmdqzCOM6sn/55pI6
FtkFgL7BnmNc0F7fldDm5yf52HfMmKVPUjqJJf7fEsbNdPie3eEoA7ode4cW
6m90Sc6fSXWgMlkAkAfMB/yvOd8x7/mmBL5KXnTtujykqSwA6O/ozkXfEpXJ
AgBfhj7WH4zH83ufJB97UL6iebBB6u7tB033lALWNOhP1lFzZ4GUyQKwQJ+3
tRHanPGwfZKP70/MRrxapnbfZdU6lskCQB/tpmUxbjdJ7tMP8ZjF9sjpEHyX
47LAMRvAnGGewCtPkfrnvZCfb4HQudhTdKsEXlJ3vQD+i07fNt9hnsNfoA+Z
2PQ8G9ZEbA8na6rwkdz6yiBAH/uF2l6nxI+FLIc/wiebfgd4iQQbkrI+JaFv
J81HQp/i84fWk6R8n0IOyAHWJdIxmwK6fyGT9R2ewzEq4P9nHmArs2+y7rlp
8MWfaYJvsCdj0P6aItSVH4MAP0S+4FM3+vBB1+Ud8O1bpJdO/t+jYb3appP+
Yu0AHfafJOi4H27wHs58pZ2eli6NtN0k7a+hLvQpe4GglfrV6VPahP2j6Zg9
O5P3Kun91sHhmMmwWCYkdNa639Ty/NwkTRLvgJ6YvqZ2Ac+ndE4SjD6jtYld
gG2W0jgp56nGoA+HGbM8P2jM0n4XZa47HA6HY3ahbfvN4XA4HA6Hw+FwOBwO
h8PhcDgcDofD4XA4HA6HwzF6zJHR7PsYVbmO+mjSD1N5hobD4RgfOMNmtSa+
Qar7HVkRLtAyOfPn+JbKdNQHvJz4GvQFZwu9p+IzK6Tbf5MWy9nhcLQPzs2w
8+rb+kbUeMnTWu6Slso1uJ1RHch2+vU3EvpiYXn2/we+DyNumfVf7qxvh8Mx
82Bx1i5ssUzkwVoJ53NXifNYFXwr+zGZ+b4LzrM4taWy+C7YziutejYS3xZz
zizn6g6KxeNwOGYGOIsHWfCWFsvkrE/i9fxc2j0vj3MxiWu2YYtlTiLOkN54
A8OAs+QspmpVm4rzCJHjnD/u50g4HAHoSJy12IYvnZgjnOU7KefxoCeiL8K3
0d+pW9MzdOAZ6JCc28p5x8Z/2gRxtYaVBcP2wfr6fFtrKzkQd2cYWWB1fKOW
VSXGZwyL/4Ovj/7MnfHtcMwmcPY6sWiI07JWwjm9rIvW9VnDu1ib/YkmYqYd
2FotmwP+z5znbGGLWUJszy1qlkNcE3RIYqgQE8dsjdPKHmoA7ALq2EQWYJ/E
fUC/7lb6RD+Oke54IM4pMRjSGC9tYHkn3d3wWeLI0Be0E7GXbD1ol7KHElgc
P+j8voTxcXXD+jgc0x0flRAnilhc6JIW+89iX1YF+iNxtFiLww+zk4T4h/hj
7dzPdWQ8PnDTGYlhRex2ZAO+ZfhdVRoX6/PwHPjtEVomKZUpw/obmtoF1IPY
csRNoL7EYKQPHpFeOstk/BXSHQ/QabGh10r+nM5hQL+kcTOrgJh5r0o3lgXx
FKgjdl9VO4i2fUq6dgG/T5T+ONjjGrMOx1QCHYpYwGuia8RrZD5cF11jzmOH
/4WEuOcp4BEPaFk76bWjpBs7GRDnZa2EmF+5mMk5bFwjlfE309+tbtDziNbX
/CDQRxz3XLwBW5dkjXFedA3e86y+H8AzrtayifGyVQUaN8rQAh9/XuuW3ivi
S9CEDv+ydOM8Hqt0X6C/4Xes1xKfOHcuN7IjHQ+nSG8/AmTODUoncSiqyL65
GVo+IiGeQq4/i7BY64iuYv6rLbSOxKy0cWDnpNOnuTFrawWPRfVHRyCekfn8
iJO8VsKYzZXhcMwEMFewsZlDB0TXr5PePXbwHmKeEHOcGFG5OF3H6DPwopgv
WLzIPfVdzE1kDXP5zAH1Iy/+nOcrpmUF5cRrBaYzGm+HF8BH4HOPSHE8xOVK
32eia7tK71oBPIg4ONgLyAt0c/Y4lq0pU4+vZmjBJvhv/T+99+GCso7T+jwg
vXLR+oB3YQfRj8SiSfktssHGw37R9VV6bZ8oH21Fn26vNP5Qym2EBQW04Gd7
OXOd9L6Csm6W/v1gpyfXGIPXSvmYtbWCWMbZOEYWHiYh3g/9d5JeP7SERodj
uoJ1MvjjK9JdMzP5wLXNo7xch78VzSubn2cUvOvTen8HCTzjCQm+pEExY+Ah
CyumIl60QLo80nRqWz9ARsxV+jaVvCzgmfs1/zHR9Yuld60A3gpffFwCL3qn
3h8U43LzDC1vl8APt8/cK2ozs32Wl7yLZ9Hzfyr9soB9A/Q7fjCzfVhfT/dc
ztf3rNTfZ0m3b8uwdYaWcyXo3Ol17KmcnUedn9H3xXt4jfZ4rYA+ZT24aMya
72v/zDXi0xATDT8UugTtNonx2xyONmD8EN3J+CjznHmP3Qw/+ER0r0gWMGfv
1LLemnnPBvqu66V7VgO6MDxzlHtUDPAg7P4V0TV8JjbnDUWywPagc890bPOJ
2VoBvjPzeZiNtYdUkwU5sF5QZ+2YPrpDir+zivdMFcmChfr8t6Tb58gpbCfs
CXgi4wHake3Giz+izy2qWNcYddcL6CN0CGSu1T+2+zaR3liWZbLAxqzpPLS1
yT3WlBjLFtOSMUuszIelXxbMl5m/99cxs8EYZv7cJ93xzXc/zA/0fHzND0lX
PzNZkPP123pzrJehT6M7f0V6fdzwOfStnC9mFDC/sPnMTbdkz0jMI4tkAfSv
1nub6DX8Qy9qOcia56R/P+JnJfCsJntX68oCgE8kXhMBFveXulg/IgvwEaW+
K+wC/DV3RHnP0zIpG//LQ8kz5PuBBN9Yk++k68oC6gy/Rh5Yux4v3bVt/Jrs
8TLbyWRBbqwxNvFVWr8dreXk9kvtoXkPTq5jt/1BevdHOBzTEcxv5j98krjt
+EIY8/AD9qPsE+VFFqBfn5QpZwPNj42xVAL/wdePvym25ZEJ8KGPt0lEBeBD
gC+zpsBeJ+yedF0XngB9Ob6B/wN5goz8pATaTD9Fv7w2yX+w3qu7Z9XQRBaQ
F/mGL58+QD+GL8K/F0T5iuwCAH+EtzEekB/YA4wHZCHtlp7zgz30dWl+XkaT
fUQnSxiz2HT0BzTS1vBj+jVeN0IW0Kc5u+DNEtYrKMPoviaTjz7EJkjlAGBN
A1mTrrE4HNMR+DRYE0W/wrbGz40sOCzJVyYLAPLAvh2CD+0tvT4g+MVXtFz+
hl9Nle8VGYQfHf62RPK6epksAIsk0MXZEMgGaIN3XJfkY78UvgTshd0l7IOv
iyayQDS/fcuLfKIP0jYukwWA9oE/H6vPUn/GQ7puyp5T1sdpW9bLt65ZV9B0
Tyn6P2va0AodtBffCixN8pXJAoA8oA/p19w3GNCGzXOI/n2u9O/jwp74Xubd
DsdMxSBZMAisxf2VhH166HboccPuT28TJguq7nfNgW/EntQy4JWfb1gePmx0
8VG0zyBZUAXwRuzA92vC/mvyzS589BND1GMQBsmCMqCvIOtWSnfMxv4zA3oF
tkmb51E5HJMK9Df4GvOK/YP4Rer4R8+Rri1t6fMt17Ep0PPQL40+fCxNzrUm
/79KL41N11RB2zYTNgO+Mtbs2a8KvU2+l2bfFes9MY34bJrKllHFk2DM3i7d
PkXm1BmztvctTtdn8vEdTfyNgsMxk8E8R+9jvZk1xk3Ks/dhQ31u8yhN0t4L
o28zTfPKsxeC9olp3KyV2rUD+GNMY9P9L3Okvy/rjoepAOvMw4xZO88pTqks
IQ9+z22GqqnD4XA4pjvcHnA4HA6Hw+FwOBwOh8PhcDgcDofD4XA4HI7ZjVHs
h3U4HA7H9AHfpXDeRe4sQIfD0QvipjBfOP9h/wF5pwJHSrc+e425LpMI9kee
ponzfqbiHNlhQT+Oq085r4OzQraf4vc6HNMJ8BWLs5WeDz0O8J3Q30i3PkeX
Z5+VIM7QzyW0D2ewDnNOxVQAWcUY41w56nzsGN7POUic893kPFqHY7aA83Qs
vngutkFT4KctintVBuQBcQcsnpmjH5zXFsdrGwXQE9IzT5sCfrxW8nGnpwKc
yUfMg9PH8G6HY7oAvZL44sRJaHJ2WRHw0f5S6uutFsuNs7Un6QyMSYLFi2xy
VlFVcH4rcY7bOHvP+jSOOz3V4ExY7Ki5gzI6HNMEbcXjoBx0P4sjwzn4bZ65
2VQWWIzim7Q+w/rDKWOSY5gg7+rsdSGvxYvcosHzVcH5zsPKAvqOMYa9OYwd
M0eGP0fiIOmNEe5wTFcsknA2J+ewcz4/MQyarMMxt4mP851OelBCnHaLi9Um
iEND3Ja6suBCrQ9nUH5Ngoxq4mvi7DrOvSeOCzFecrGwxokDJfBa2ojYFAvK
s/9/oNc+o4kzOTmLmRjAbcs7zn8mxkITWYB8YjxRN/x9jNumdsxxEvqQmKuL
JMRuTuMTVAFn0/1R2h/nDsdUgjjrxIUiNghnsMPDmVt14/aRF95K7HR0tbMk
xMSirH2KH2sE7AL2b9SRBXGMYs4YJqbtJRLmcB3f9dsk8ErKIKanxfudhH1S
6Lh3S+hPdO+d9W/WzKvwOIt5TL+dq8/j40O2t7mniLo1kQXEh8AXRLyEt0iI
q2bnSdeNH8B4Z6wiN4nn9Ect55ia5QBkLXHuOMu9iSxxOMYNzvL9Dwl8zeYl
+y4t5rFhjt4nhsnumXIY/2slzCeLt8u+CuYt62rzo7zv7qQbJMQXacpfmsgC
8ys/E72Xc4g5336N/oYO9E701pzfADqIiwh/RPZtpOXBO82OOlxCzB7ase1Y
NIP8Nau0Lgfo7w9J6MvV+qzRd2JB3Wyt4OroGvFbaCOLWwZdt+v/VXwruTo3
kQW0N+s87AOz8UTce8ZXulZAudtK0HNyMFvCfDrQQZ8yfmMbijKukqDXbFtS
t3laB/Zg+X4ix3QDcxQeyJxYEl2/NrlmMeyJ8UQ8mlyMqH2lq28bn8XfbGsF
du1MCXKAWF9PSIiLUyYPuIc/554k3SeBJ9ybubdc8vzH/Mqromv76DX4Hfzl
Sa1TLjY8Zd4v/e21nXTlwGUSfCvEwUIfJ9blIH53SIaGonSLFLfX/lq3uL3p
u6P1/7l670dKX06OrtYyjO9Ds9lSlHO5hP6Avl9LGBNl8oA2/FyGju9L4Js5
Go8qKOs06V8XyK0VIM8YW8TrOSVTDvYE8vJJ6fax6QlPRdfg/fcrrfTpy1Is
D2wv0zPSP24cjkmH6TLMC4u5Euv3sX4E34C3F8kCbAjm5AXRtWOld60AffRn
EvRB3rNY75fFzLS9o8uT9NFOekHCekR6b4+Csi7Q98Wx0W394GZ9F/wSnZUY
kOmcNn7xiuT3RJEf/v9lLetwLXtQjEv8Hqdm6MilMv9Frg9SoEcXxbjkN7wM
Gm0/jK0fUC4xnuGHf6n3TtTrh5W8b47WOaUDmcba1OmZe2/KlMN4MTkcfxdy
kV5bHl1DL99UaczJgjP0mRujayZTYluYmKy/kjBuSfTtvZLXM7iP34r55HuJ
HNMN8HbGP/qZ8T1iP5l+xJiGn5v/E9mRkwXohXdI/z6KVdE19G/8Op+S4KMH
zB98D5c1qHuTfUTm6zC/MnQ9lqm38cpUFpgvnfme6uZzNMEnP6LXttX8TWLt
1gX1+YK+b5fM/Zh/FckC+p7YlfdH+XfWMuFz8Fjk+Af1HjK3aXzouvuIGCvP
al220mv0n9ks9OlxUXn0XZEsMFs4Xmu+KLr2LgnfER+kdWR80x7YUo9Lfj0A
2fOM1jH2EfHcJO8zczgAtgA6LvqPzX3WUJkTzJf9JKwZmg/AZEFu7mOjvybd
OILwmae1fPS830v/d0Do9Ngk2zWoexNZgJ8L2swGYl0D3vfFJJ/xyvT7A3xI
6MVpbFvmPn4v/EQxz2Vdk+9hy/zMbcLsgnQNFX/WSunWGfrgayl9Zieuia6h
O2Mj7q2/Y/oulUBfkz39dWUB+ZBR/yVdGU3/vaR1ZoyxfmTjjzzQeHKmLOxU
xvGO+huakHWvazmM+X2je6LXGStFcp02Z7yvlt42Yq8ZPrmtcg85HBME9pww
n7GRsZ1tTsA3H5Jefwq8Aj0w59OBV/xRy8AGYD5hU+NTPkF/x/N+od5ruvem
iSzYKaoj9DJ38Z+nNj+8El9Wzu+L/oj8Qgdl/uOb+LGEfTpxOfjbadf9atRv
WODD+V8J9g9yF98M31Fg98V+lyK7AKzSe7QPe4uRfUdk8mETQF/T/fRNvi/A
j8bYpO1ZG6f/GUPwWvo0lun0HX2YsznxTTIObtC/eY79AC9JoJW9qqlu/7WC
sgzbad1WRNfYl2D76JbnHnI4JgjYu+hJ+G4/K0GHZS8h62orkrxlsgBwlg37
Ub8hwacLP0S2wG9jmwD9FH5zqP79tgb1bvqt2Z5aH+p4huTXPctkAWBewxvQ
Q/GZwA9jOYCMYE31YAl05/zfowLyAN2UtvmuBH4+L8lTJgugg/HwEwnjIbfX
Fh0X+uB/0NrknM6m35qhm6BX8E0A+gd+nEck9GnclyYLbi0oh3HwoJaDX4h+
wu7AN5r2F3umzK+JDMytF9jaWLp3mrlyU8EzDsckAp9mPF5ze1UGyQLA3I79
qeZrjX/jd9hby4OvNvlGCH6Eb6DJno31pHzvi8mCMjlT9L0x5bLHCRuEdVrW
ppc2qOMwoL03kGIay2SBoeh8Dng/PjL24kAfcqNsPBSBvULYpE323PLMnJLf
wGTBbSXlME7jNrJ90zGu6KQrJYxVxtxD0r9ewFxB/iKTfG3AMdOBfggPQRag
a8Hf6s5j5hp69OtJOqRhndo+T4g5jd7Jd7ovSvA1v7vG89CHnpnS9452q9kY
9BdyF/r+XUJ/1vnGDh74A+mnr+k5U6M6D4o+o+/oQ+w/+rTJdyzsf05pzckW
+pe1BD9/wjEbgB7P/ML3jx4IH6l7hgu88r1ajqUmMmVUoB74pKEPOlknfFeN
5+GVtEtM3ykyOd+hQh98MaavjqyDjpMzaVLoM9Bn8VhtOsasHEuUle5zwF7A
DlzdtLIOh8PhmNawtRXWKiZNHjocDodj6lC0luxwOBwOh8PhcDgcA/F/AcqS
Ehk=
     "], {{0, 124}, {387, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{387, 124},
   PlotRange->{{0, 387}, {0, 124}}]], "Input",ExpressionUUID->
  "39514c26-817f-483b-98d0-ad48fb5a9518"]
}], "Text",
 CellChangeTimes->{{3.694887635671339*^9, 3.694887665587338*^9}, {
  3.6948882770205793`*^9, 
  3.6948882856258173`*^9}},ExpressionUUID->"915b9c93-a599-40fd-8bb8-\
55f2e97901f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Quaternion", "[", 
   RowBox[{"a1", ",", "b1", ",", "c1", ",", "d1"}], "]"}], "**", 
  RowBox[{"Quaternion", "[", 
   RowBox[{"a2", ",", "b2", ",", "c2", ",", "d2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.694887238574095*^9, 3.694887258212253*^9}, {
  3.694887294583782*^9, 
  3.694887315452149*^9}},ExpressionUUID->"d2e1fb54-3329-4449-abd4-\
9456510810e9"],

Cell[BoxData[
 RowBox[{"Quaternion", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a1", " ", "a2"}], "-", 
    RowBox[{"b1", " ", "b2"}], "-", 
    RowBox[{"c1", " ", "c2"}], "-", 
    RowBox[{"d1", " ", "d2"}]}], ",", 
   RowBox[{
    RowBox[{"a2", " ", "b1"}], "+", 
    RowBox[{"a1", " ", "b2"}], "-", 
    RowBox[{"c2", " ", "d1"}], "+", 
    RowBox[{"c1", " ", "d2"}]}], ",", 
   RowBox[{
    RowBox[{"a2", " ", "c1"}], "+", 
    RowBox[{"a1", " ", "c2"}], "+", 
    RowBox[{"b2", " ", "d1"}], "-", 
    RowBox[{"b1", " ", "d2"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "b2"}], " ", "c1"}], "+", 
    RowBox[{"b1", " ", "c2"}], "+", 
    RowBox[{"a2", " ", "d1"}], "+", 
    RowBox[{"a1", " ", "d2"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.694887259264072*^9, 3.694887315843793*^9, 
  3.694894709892593*^9, 3.694985286921081*^9, 3.718921585974654*^9, 
  3.718921618352828*^9, 3.71892164846426*^9, 3.7189267407455683`*^9, 
  3.719203246943221*^9},ExpressionUUID->"2a6d3db1-8c3c-4485-8894-\
5e6ba536735d"]
}, Open  ]],

Cell["Checks out", "Text",
 CellChangeTimes->{{3.6948876761037397`*^9, 
  3.69488767773421*^9}},ExpressionUUID->"eeb186d4-a238-4ca1-b534-\
cbd09ce6eebc"],

Cell["We can also compute the conjugate", "Text",
 CellChangeTimes->{{3.694985232200625*^9, 
  3.694985241110284*^9}},ExpressionUUID->"043ae6aa-8814-4e47-be9c-\
5b1db3382f38"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Conjugate", "[", 
  RowBox[{"Quaternion", "[", 
   RowBox[{"a1", ",", "b1", ",", "c1", ",", "d1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.694985244980895*^9, 
  3.694985249334667*^9}},ExpressionUUID->"b1c352b4-61ee-4688-9ca2-\
59b3d21698ac"],

Cell[BoxData[
 RowBox[{"Quaternion", "[", 
  RowBox[{"a1", ",", 
   RowBox[{"-", "b1"}], ",", 
   RowBox[{"-", "c1"}], ",", 
   RowBox[{"-", "d1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6949852503787117`*^9, 3.694985286960196*^9, 
  3.7189215860149097`*^9, 3.7189217085401506`*^9, 3.718926740785179*^9, 
  3.7192032469948797`*^9},ExpressionUUID->"c453d60a-3b50-48c3-9553-\
105265e0b036"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convert rotation vector to quaternion", "Section",
 CellChangeTimes->{{3.69489265042039*^9, 3.69489267593484*^9}, {
  3.718921395458796*^9, 3.718921399600624*^9}, {3.7189214603268127`*^9, 
  3.7189214625560217`*^9}},ExpressionUUID->"04981444-a538-40cd-99ee-\
937f11ed1c07"],

Cell[TextData[{
 "Mathematica doesn\[CloseCurlyQuote]t seem to know how to do this \
automatically, but you can convert an Euler vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "z"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "27c756fd-c799-4cff-add4-ef60ec9d0e33"],
 " with magnitude ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2a91f01c-48b9-427a-a42e-85196ddd899b"],
 " to a quaternion ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "56ea41bf-1a01-41ba-8c81-ae267d8aea7e"],
 " by \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Alpha]", "/", "2"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"x", "/", "\[Alpha]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "/", "2"}], "]"}]}], ",", " ", 
      RowBox[{
       RowBox[{"y", "/", "\[Alpha]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "/", "2"}], "]"}]}], ",", " ", 
      RowBox[{
       RowBox[{"z", "/", "\[Alpha]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "/", "2"}], "]"}]}]}], "  ", ")"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f02783cb-f3c6-44a7-8b63-b4909e5033ad"]
}], "Text",
 CellChangeTimes->{
  3.694892681595228*^9, {3.694894547992194*^9, 3.694894619454176*^9}, {
   3.718923870533046*^9, 3.718924018461282*^9}, {3.718924059445813*^9, 
   3.7189241863763933`*^9}},ExpressionUUID->"6724bdf9-2999-4b7e-a689-\
c25d9631173d"],

Cell["This function does just that", "Text",
 CellChangeTimes->{{3.718924198220639*^9, 
  3.718924205516038*^9}},ExpressionUUID->"671d1398-5815-464e-bb6a-\
bfa432601d89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertToQuaternion", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[Alpha]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Alpha]", "=", 
      RowBox[{"Norm", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Quaternion", "[", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Alpha]", "/", "2"}], "]"}], ",", 
       RowBox[{
        RowBox[{"x", "/", "\[Alpha]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "/", "2"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"y", "/", "\[Alpha]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "/", "2"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"z", "/", "\[Alpha]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "/", "2"}], "]"}]}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.694472019482131*^9, 3.6944721869271803`*^9}, 
   3.694472220384625*^9, {3.6948880373524427`*^9, 3.694888042008224*^9}, {
   3.69489449791885*^9, 
   3.694894505883608*^9}},ExpressionUUID->"a9c16e70-163f-4136-92c8-\
2e036cad3a35"],

Cell["\<\
Then we can test that it works, giving us an output that\[CloseCurlyQuote]s a \
quaternion\
\>", "Text",
 CellChangeTimes->{{3.718924208804088*^9, 
  3.718924227619299*^9}},ExpressionUUID->"31dd35a0-275f-4f7b-9f70-\
35c9c99f122f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convertToQuaternion", "[", 
  RowBox[{"0", ",", 
   RowBox[{"Pi", "/", "2"}], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.69447222430013*^9, 3.694472236696919*^9}, {
  3.694472303298541*^9, 3.694472303353088*^9}, {3.694888011758707*^9, 
  3.6948880149069433`*^9}, {3.718925057634952*^9, 
  3.7189250577843657`*^9}},ExpressionUUID->"646aaea0-9de0-4f95-b0b4-\
f96efd02beb6"],

Cell[BoxData[
 RowBox[{"Quaternion", "[", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", "0", ",", 
   FractionBox["1", 
    SqrtBox["2"]], ",", "0"}], "]"}]], "Output",
 CellChangeTimes->{
  3.694472237647017*^9, 3.694472304682871*^9, 3.6948863384986877`*^9, {
   3.694888015120936*^9, 3.694888044973229*^9}, 3.694894510244381*^9, 
   3.69489470995077*^9, 3.694985287016214*^9, 3.7189215860687113`*^9, 
   3.718921718677328*^9, 3.71892505832444*^9, 3.718926740861889*^9, 
   3.719203247061075*^9},ExpressionUUID->"9b38914e-4c2d-4be5-a53c-\
966b5f0735be"]
}, Open  ]],

Cell["\<\
We get a general form of the solution by entering variables for each input\
\>", "Text",
 CellChangeTimes->{{3.718921484317869*^9, 3.7189214943736897`*^9}, {
  3.7189242393952293`*^9, 
  3.7189242683779697`*^9}},ExpressionUUID->"c534a309-de05-4464-b588-\
ffe394654b11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convertToQuaternion", "[", 
  RowBox[{
   RowBox[{"v", "[", "0", "]"}], ",", 
   RowBox[{"v", "[", "1", "]"}], ",", 
   RowBox[{"v", "[", "2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.718921507756175*^9, 3.718921551121262*^9}, {
  3.718922014281155*^9, 3.7189220178065367`*^9}, {3.718925133280397*^9, 
  3.7189251421573057`*^9}},ExpressionUUID->"56de1bd5-7836-40f8-b13f-\
1a082e73fd9a"],

Cell[BoxData[
 RowBox[{"Quaternion", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
     RowBox[{"v", "[", "0", "]"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
     RowBox[{"v", "[", "1", "]"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
     RowBox[{"v", "[", "2", "]"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]]}], "]"}]], "Output",
 CellChangeTimes->{3.7189215521631403`*^9, 3.718921586110085*^9, 
  3.718921725195396*^9, 3.718922019017281*^9, 3.718925142575539*^9, 
  3.718926740918351*^9, 
  3.719203247100253*^9},ExpressionUUID->"35589969-90e1-449c-9e75-\
9908a1684b32"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Composing rotations", "Section",
 CellChangeTimes->{{3.71892527722688*^9, 
  3.7189252896905603`*^9}},ExpressionUUID->"4a08e1fb-792f-4472-a72e-\
8bc5175c8654"],

Cell["\<\
Then we compose multiple rotations by left multiplying the new quaternion \
onto the old\
\>", "Text",
 CellChangeTimes->{{3.7189243120179*^9, 3.718924312952765*^9}, {
  3.718924382057418*^9, 3.718924401898432*^9}, {3.718924517542246*^9, 
  3.7189245286037617`*^9}},ExpressionUUID->"41a88f93-84ef-44dc-b970-\
4884a6acc5bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"composedRotationQuatForm", "=", 
  RowBox[{
   RowBox[{"convertToQuaternion", "[", 
    RowBox[{
     RowBox[{"v", "[", "0", "]"}], ",", 
     RowBox[{"v", "[", "1", "]"}], ",", 
     RowBox[{"v", "[", "2", "]"}]}], "]"}], "**", 
   RowBox[{"Quaternion", "[", 
    RowBox[{
     RowBox[{"q", "[", "0", "]"}], ",", 
     RowBox[{"q", "[", "1", "]"}], ",", 
     RowBox[{"q", "[", "2", "]"}], ",", 
     RowBox[{"q", "[", "3", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7189244312985353`*^9, 3.718924452597406*^9}, {
  3.718924931097124*^9, 3.7189249374380217`*^9}, {3.718925166959259*^9, 
  3.718925173157146*^9}, {3.718925895622744*^9, 
  3.7189259170440187`*^9}},ExpressionUUID->"9d433b1f-17d6-447e-a9d5-\
9b18917b85aa"],

Cell[BoxData[
 RowBox[{"Quaternion", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
     RowBox[{"q", "[", "0", "]"}]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "0", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "1", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "3", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "2", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
     RowBox[{"q", "[", "1", "]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "0", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "0", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "3", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "1", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "2", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
     RowBox[{"q", "[", "2", "]"}]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "3", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "0", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "0", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "1", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "2", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
     RowBox[{"q", "[", "3", "]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "0", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "1", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"q", "[", "0", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"v", "[", "2", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.718924453770369*^9, 3.7189249392420893`*^9, 3.718925174132769*^9, {
   3.7189259039718018`*^9, 3.718925918066436*^9}, 3.718926740968471*^9, 
   3.7192032471508904`*^9},ExpressionUUID->"268ad604-088c-4523-a011-\
231c439eab9f"]
}, Open  ]],

Cell["\<\
The output is kind of gnarly. We can strip out the components of the \
quaternion and write them into equations like so\
\>", "Text",
 CellChangeTimes->{{3.719202954837138*^9, 
  3.7192029918372393`*^9}},ExpressionUUID->"a2e8e52c-bcdb-4eed-a0b4-\
de36c0720574"],

Cell[BoxData[
 RowBox[{
  RowBox[{"composedRotationGenForm", "=", 
   RowBox[{"Level", "[", 
    RowBox[{"composedRotationQuatForm", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.718925919854607*^9, 3.718925948172217*^9}, 
   3.719202939110084*^9},ExpressionUUID->"408ec233-7c30-4fed-ba7a-\
6761d9946ec8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"composedRotationEqs", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"newq", "[", "i", "]"}], "\[Equal]", 
     RowBox[{"composedRotationGenForm", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7189259626373987`*^9, 3.7189259689548683`*^9}, {
  3.718926004790225*^9, 3.718926050473303*^9}, {3.718926382613509*^9, 
  3.718926388763172*^9}},ExpressionUUID->"43d17719-f187-410a-87c9-\
d739d511be76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"newq", "[", "0", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"q", "[", "0", "]"}]}], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "1", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "0", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "1", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "2", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]]}]}], ",", 
   RowBox[{
    RowBox[{"newq", "[", "1", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"q", "[", "1", "]"}]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "0", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "0", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "1", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "2", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]]}]}], ",", 
   RowBox[{
    RowBox[{"newq", "[", "2", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"q", "[", "2", "]"}]}], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "0", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "0", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "1", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "1", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "2", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]]}]}], ",", 
   RowBox[{
    RowBox[{"newq", "[", "3", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
      RowBox[{"q", "[", "3", "]"}]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "0", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "1", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "1", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"q", "[", "0", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]}], "]"}], " ", 
       RowBox[{"v", "[", "2", "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "0", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"v", "[", "2", "]"}], "]"}], "2"]}]]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7189260310004807`*^9, 3.718926050903825*^9}, 
   3.718926393188788*^9, 3.718926741070483*^9, 
   3.719203247234789*^9},ExpressionUUID->"e421e64a-3603-4044-aff2-\
bbae8cb2f082"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotating a point by a quaternion", "Section",
 CellChangeTimes->{{3.718925209695519*^9, 
  3.7189252538191147`*^9}},ExpressionUUID->"37cbe39d-c037-44e3-9efc-\
4fc6e639929e"],

Cell["\<\
To apply a rotation (in the form of a quaternion) to a point, we do p\
\[CloseCurlyQuote]=qpq*, where p is the pure quaternion made from the vector \
v by p=[0,v1,v2,v3], p\[CloseCurlyQuote] is the rotated pure quaternion, and \
q* is the conjugate of q, q*=[q1,-q2,-q3,-q4]\
\>", "Text",
 CellChangeTimes->{{3.718924685322255*^9, 3.718924690985428*^9}, {
  3.7189247545138273`*^9, 
  3.718924792765874*^9}},ExpressionUUID->"d2d33463-d70a-4d5f-b2c0-\
8abb559a7bef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotatePointByQuaternion", "[", 
   RowBox[{"v_", ",", "q_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "quatOut", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"quatOut", "=", 
      RowBox[{"q", "**", 
       RowBox[{"Quaternion", "[", 
        RowBox[{"0", ",", 
         RowBox[{"v", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"v", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"v", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "**", 
       RowBox[{"Conjugate", "[", "q", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"quatOut", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"quatOut", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"quatOut", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.718924820065897*^9, 
  3.7189248231618347`*^9}},ExpressionUUID->"efe2e24c-c8a0-45b9-a3d9-\
f34978a2b84b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rotatedPointGenForm", "=", 
  RowBox[{"rotatePointByQuaternion", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p0", "[", "0", "]"}], ",", 
      RowBox[{"p0", "[", "1", "]"}], ",", 
      RowBox[{"p0", "[", "2", "]"}]}], "}"}], ",", 
    RowBox[{"Quaternion", "[", 
     RowBox[{
      RowBox[{"q", "[", "0", "]"}], ",", 
      RowBox[{"q", "[", "1", "]"}], ",", 
      RowBox[{"q", "[", "2", "]"}], ",", 
      RowBox[{"q", "[", "3", "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.718924828876026*^9, 3.718924914718604*^9}, {
  3.718925029316245*^9, 3.7189250296258993`*^9}, {3.718925196057013*^9, 
  3.718925200512205*^9}, {3.7189256607671328`*^9, 3.71892566637353*^9}, {
  3.718925697694088*^9, 3.718925701365532*^9}, {3.718925786127584*^9, 
  3.718925800949744*^9}},ExpressionUUID->"076c1a66-f3a2-4521-82f8-\
d398653977a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", "2", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "0", "]"}], " ", 
        RowBox[{"q", "[", "2", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", "3", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "0", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"p0", "[", "0", "]"}], " ", 
        RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", "0", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"p0", "[", "0", "]"}], " ", 
        RowBox[{"q", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", "1", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"p0", "[", "0", "]"}]}], " ", 
        RowBox[{"q", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"q", "[", "1", "]"}]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "0", "]"}], " ", 
        RowBox[{"q", "[", "2", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", "0", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "0", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"p0", "[", "0", "]"}], " ", 
        RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", "3", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"p0", "[", "0", "]"}], " ", 
        RowBox[{"q", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", "2", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"p0", "[", "0", "]"}]}], " ", 
        RowBox[{"q", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", "0", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "0", "]"}], " ", 
        RowBox[{"q", "[", "2", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", "1", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "0", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"p0", "[", "0", "]"}], " ", 
        RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", "2", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"p0", "[", "0", "]"}], " ", 
        RowBox[{"q", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", "3", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"p0", "[", "0", "]"}]}], " ", 
        RowBox[{"q", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "1", "]"}], " ", 
        RowBox[{"q", "[", "2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"p0", "[", "2", "]"}], " ", 
        RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7189249155777473`*^9, 3.71892503077396*^9, 
  3.718925201132872*^9, 3.718925701806836*^9, 3.718925801415948*^9, 
  3.718926741150344*^9, 
  3.7192032472993307`*^9},ExpressionUUID->"fe4686bf-b351-46c0-9a20-\
3d72a98ecd5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rotatedPointEqs", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", "i", "]"}], "\[Equal]", 
     RowBox[{"rotatedPointGenForm", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.718925755960832*^9, 3.718925769280437*^9}, {
  3.718925803693693*^9, 3.718925850412218*^9}, {3.718926402079091*^9, 
  3.718926408086145*^9}},ExpressionUUID->"cf2ecfa1-500c-4ffd-9a49-\
c03c46fac7b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", "0", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"q", "[", "2", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "0", "]"}], " ", 
         RowBox[{"q", "[", "2", "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"q", "[", "3", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "0", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"p0", "[", "0", "]"}], " ", 
         RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"q", "[", "0", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"p0", "[", "0", "]"}], " ", 
         RowBox[{"q", "[", "0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "2", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"q", "[", "1", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"p0", "[", "0", "]"}]}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "2", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"p", "[", "1", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"q", "[", "1", "]"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "0", "]"}], " ", 
         RowBox[{"q", "[", "2", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"q", "[", "0", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "0", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"p0", "[", "0", "]"}], " ", 
         RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"q", "[", "3", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"p0", "[", "0", "]"}], " ", 
         RowBox[{"q", "[", "0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "2", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"q", "[", "2", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"p0", "[", "0", "]"}]}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "2", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"p", "[", "2", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"q", "[", "0", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "0", "]"}], " ", 
         RowBox[{"q", "[", "2", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"q", "[", "1", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "0", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"p0", "[", "0", "]"}], " ", 
         RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"q", "[", "2", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"p0", "[", "0", "]"}], " ", 
         RowBox[{"q", "[", "0", "]"}]}], "+", 
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "2", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"q", "[", "3", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"p0", "[", "0", "]"}]}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "1", "]"}], " ", 
         RowBox[{"q", "[", "2", "]"}]}], "-", 
        RowBox[{
         RowBox[{"p0", "[", "2", "]"}], " ", 
         RowBox[{"q", "[", "3", "]"}]}]}], ")"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.71892582296784*^9, 3.7189258508931828`*^9}, 
   3.718926408461903*^9, 3.7189267411999474`*^9, 
   3.719203247330866*^9},ExpressionUUID->"44bf8f36-aea6-4793-a867-\
0101ec37cc08"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Write C-like file", "Section",
 CellChangeTimes->{{3.7189263128731003`*^9, 
  3.7189263198688593`*^9}},ExpressionUUID->"99d44e08-628c-4a27-8d78-\
1493112651bf"],

Cell["\<\
Mathematica has a function which writes out an expression in C-like syntax, \
as so\
\>", "Text",
 CellChangeTimes->{{3.718927350388506*^9, 
  3.718927371546279*^9}},ExpressionUUID->"a54ab078-932d-44a7-8c04-\
e120ce7f07a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{"composedRotationEqs", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",ExpressionUUID->"6f8a95a7-\
2198-4b16-8efb-436110910b1d"],

Cell["\<\
newq(0) == Cos(Sqrt(Power(Abs(v(0)),2) + Power(Abs(v(1)),2) + \
Power(Abs(v(2)),2))/2.)*
     q(0) - (q(1)*Sin(Sqrt(Power(Abs(v(0)),2) + Power(Abs(v(1)),2) + 
           Power(Abs(v(2)),2))/2.)*v(0))/
     Sqrt(Power(Abs(v(0)),2) + Power(Abs(v(1)),2) + Power(Abs(v(2)),2)) - 
    (q(2)*Sin(Sqrt(Power(Abs(v(0)),2) + Power(Abs(v(1)),2) + \
Power(Abs(v(2)),2))/2.)*
       v(1))/Sqrt(Power(Abs(v(0)),2) + Power(Abs(v(1)),2) + \
Power(Abs(v(2)),2)) - 
    (q(3)*Sin(Sqrt(Power(Abs(v(0)),2) + Power(Abs(v(1)),2) + \
Power(Abs(v(2)),2))/2.)*
       v(2))/Sqrt(Power(Abs(v(0)),2) + Power(Abs(v(1)),2) + \
Power(Abs(v(2)),2))\
\>", "Output",
 CellChangeTimes->{3.718927383064041*^9, 3.718928678802355*^9, 
  3.71920324736616*^9},ExpressionUUID->"2c9b49b9-b799-491c-b863-63fd60be7e9d"]
}, Open  ]],

Cell["\<\
We can use this function to write out a formatted C file with the equations \
above we want to use in C\
\>", "Text",
 CellChangeTimes->{{3.718927388976541*^9, 
  3.7189274286010027`*^9}},ExpressionUUID->"877f240e-d713-4c38-be37-\
d672e336667c"],

Cell["First, create the file", "Text",
 CellChangeTimes->{{3.7189274322000437`*^9, 
  3.718927437208212*^9}},ExpressionUUID->"0b7b8e83-5e36-4747-8a56-\
f353c7daecc3"],

Cell[BoxData[{
 RowBox[{"DeleteFile", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
   "\"\<quaternion_formulae.c\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outfileLoc", "=", 
   RowBox[{"CreateFile", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<quaternion_formulae.c\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outfile", "=", 
   RowBox[{"File", "[", "outfileLoc", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6887626715743513`*^9, 3.688762695097576*^9}, 
   3.68876276091197*^9, 3.688762825872221*^9, {3.6887657172492437`*^9, 
   3.6887657342583303`*^9}, {3.69490295464364*^9, 3.694902966648499*^9}, {
   3.7189269693900433`*^9, 
   3.718926972258703*^9}},ExpressionUUID->"3fa74e41-6e0e-49f2-b8fb-\
1396cee281bc"],

Cell["\<\
Then write out the text we want in the file and equations generated by CForm.\
\
\>", "Text",
 CellChangeTimes->{{3.718927441232386*^9, 
  3.718927482374997*^9}},ExpressionUUID->"092fed49-f796-4879-bcab-\
9327b58f04df"],

Cell[BoxData[{
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<void compose_rotations(){\\n\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<    \>\"", ",", 
   RowBox[{"CForm", "[", 
    RowBox[{"composedRotationEqs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\"\<;\>\"", ",", 
   "\"\<\\n\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<    \>\"", ",", 
   RowBox[{"CForm", "[", 
    RowBox[{"composedRotationEqs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\"\<;\>\"", ",", 
   "\"\<\\n\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<    \>\"", ",", 
   RowBox[{"CForm", "[", 
    RowBox[{"composedRotationEqs", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", "\"\<;\>\"", ",", 
   "\"\<\\n\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<    \>\"", ",", 
   RowBox[{"CForm", "[", 
    RowBox[{"composedRotationEqs", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", "\"\<;\>\"", ",", 
   "\"\<\\n\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<}\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.718926649363419*^9, 3.718926680217308*^9}, {
  3.718926727489216*^9, 
  3.7189267275995207`*^9}},ExpressionUUID->"34d74cfb-99b0-498b-ac19-\
6e345bdf2ba1"],

Cell[BoxData[
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<\\n\\n\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.718926806240131*^9, 
  3.7189268062779284`*^9}},ExpressionUUID->"2ca2a4c5-d2ae-48f0-ab26-\
1479808a9cd5"],

Cell[BoxData[{
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<void rotate_point(){\\n\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<    \>\"", ",", 
   RowBox[{"CForm", "[", 
    RowBox[{"rotatedPointEqs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\"\<;\>\"", ",", 
   "\"\<\\n\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<    \>\"", ",", 
   RowBox[{"CForm", "[", 
    RowBox[{"rotatedPointEqs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\"\<;\>\"", ",", 
   "\"\<\\n\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<    \>\"", ",", 
   RowBox[{"CForm", "[", 
    RowBox[{"rotatedPointEqs", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", "\"\<;\>\"", ",", 
   "\"\<\\n\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"WriteString", "[", 
  RowBox[{"outfile", ",", "\"\<}\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.71892666573176*^9, 
  3.718926724870809*^9}},ExpressionUUID->"ce2ae826-348c-46b3-96a5-\
e035dcd8b5d8"]
}, Open  ]]
},
WindowSize->{808, 655},
WindowMargins->{{Automatic, 7}, {45, Automatic}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 668, 11, 81, "Text",ExpressionUUID->"5428a1ed-65da-4922-a85c-df165c41822d"],
Cell[1229, 33, 433, 9, 58, "Text",ExpressionUUID->"49a6dd81-2915-4f13-9012-c587b4d92aba"],
Cell[1665, 44, 230, 5, 30, "Input",ExpressionUUID->"31ebcee2-190b-4b2b-8aee-34c48d3ef799"],
Cell[1898, 51, 17651, 297, 182, "Text",ExpressionUUID->"915b9c93-a599-40fd-8bb8-55f2e97901f8"],
Cell[CellGroupData[{
Cell[19574, 352, 395, 9, 30, "Input",ExpressionUUID->"d2e1fb54-3329-4449-abd4-9456510810e9"],
Cell[19972, 363, 1021, 28, 56, "Output",ExpressionUUID->"2a6d3db1-8c3c-4485-8894-5e6ba536735d"]
}, Open  ]],
Cell[21008, 394, 153, 3, 35, "Text",ExpressionUUID->"eeb186d4-a238-4ca1-b534-cbd09ce6eebc"],
Cell[21164, 399, 175, 3, 35, "Text",ExpressionUUID->"043ae6aa-8814-4e47-be9c-5b1db3382f38"],
Cell[CellGroupData[{
Cell[21364, 406, 273, 6, 30, "Input",ExpressionUUID->"b1c352b4-61ee-4688-9ca2-59b3d21698ac"],
Cell[21640, 414, 391, 9, 34, "Output",ExpressionUUID->"c453d60a-3b50-48c3-9553-105265e0b036"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22068, 428, 279, 4, 67, "Section",ExpressionUUID->"04981444-a538-40cd-99ee-937f11ed1c07"],
Cell[22350, 434, 1681, 47, 77, "Text",ExpressionUUID->"6724bdf9-2999-4b7e-a689-c25d9631173d"],
Cell[24034, 483, 170, 3, 35, "Text",ExpressionUUID->"671d1398-5815-464e-bb6a-bfa432601d89"],
Cell[24207, 488, 1259, 34, 73, "Input",ExpressionUUID->"a9c16e70-163f-4136-92c8-2e036cad3a35"],
Cell[25469, 524, 240, 6, 35, "Text",ExpressionUUID->"31dd35a0-275f-4f7b-9f70-35c9c99f122f"],
Cell[CellGroupData[{
Cell[25734, 534, 403, 8, 30, "Input",ExpressionUUID->"646aaea0-9de0-4f95-b0b4-f96efd02beb6"],
Cell[26140, 544, 565, 13, 54, "Output",ExpressionUUID->"9b38914e-4c2d-4be5-a53c-966b5f0735be"]
}, Open  ]],
Cell[26720, 560, 279, 6, 35, "Text",ExpressionUUID->"c534a309-de05-4464-b588-ffe394654b11"],
Cell[CellGroupData[{
Cell[27024, 570, 417, 9, 30, "Input",ExpressionUUID->"56de1bd5-7836-40f8-b13f-1a082e73fd9a"],
Cell[27444, 581, 3418, 105, 250, "Output",ExpressionUUID->"35589969-90e1-449c-9e75-9908a1684b32"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30911, 692, 165, 3, 67, "Section",ExpressionUUID->"4a08e1fb-792f-4472-a72e-8bc5175c8654"],
Cell[31079, 697, 333, 7, 35, "Text",ExpressionUUID->"41a88f93-84ef-44dc-b970-4884a6acc5bf"],
Cell[CellGroupData[{
Cell[31437, 708, 754, 18, 52, "Input",ExpressionUUID->"9d433b1f-17d6-447e-a9d5-9b18917b85aa"],
Cell[32194, 728, 13985, 423, 973, "Output",ExpressionUUID->"268ad604-088c-4523-a011-231c439eab9f"]
}, Open  ]],
Cell[46194, 1154, 271, 6, 58, "Text",ExpressionUUID->"a2e8e52c-bcdb-4eed-a0b4-de36c0720574"],
Cell[46468, 1162, 319, 7, 30, "Input",ExpressionUUID->"408ec233-7c30-4fed-ba7a-6761d9946ec8"],
Cell[CellGroupData[{
Cell[46812, 1173, 583, 14, 30, "Input",ExpressionUUID->"43d17719-f187-410a-87c9-d739d511be76"],
Cell[47398, 1189, 14595, 431, 973, "Output",ExpressionUUID->"e421e64a-3603-4044-aff2-bbae8cb2f082"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62042, 1626, 179, 3, 67, "Section",ExpressionUUID->"37cbe39d-c037-44e3-9efc-4fc6e639929e"],
Cell[62224, 1631, 475, 9, 81, "Text",ExpressionUUID->"d2d33463-d70a-4d5f-b2c0-8abb559a7bef"],
Cell[62702, 1642, 1081, 29, 73, "Input",ExpressionUUID->"efe2e24c-c8a0-45b9-a3d9-f34978a2b84b"],
Cell[CellGroupData[{
Cell[63808, 1675, 882, 20, 52, "Input",ExpressionUUID->"076c1a66-f3a2-4521-82f8-d398653977a2"],
Cell[64693, 1697, 5475, 170, 140, "Output",ExpressionUUID->"fe4686bf-b351-46c0-9a20-3d72a98ecd5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70205, 1872, 568, 14, 30, "Input",ExpressionUUID->"cf2ecfa1-500c-4ffd-9a49-c03c46fac7b9"],
Cell[70776, 1888, 5778, 175, 182, "Output",ExpressionUUID->"44bf8f36-aea6-4793-a867-0101ec37cc08"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76603, 2069, 166, 3, 67, "Section",ExpressionUUID->"99d44e08-628c-4a27-8d78-1493112651bf"],
Cell[76772, 2074, 233, 6, 35, "Text",ExpressionUUID->"a54ab078-932d-44a7-8c04-e120ce7f07a1"],
Cell[CellGroupData[{
Cell[77030, 2084, 185, 4, 30, "Input",ExpressionUUID->"6f8a95a7-2198-4b16-8efb-436110910b1d"],
Cell[77218, 2090, 787, 16, 171, "Output",ExpressionUUID->"2c9b49b9-b799-491c-b863-63fd60be7e9d"]
}, Open  ]],
Cell[78020, 2109, 255, 6, 35, "Text",ExpressionUUID->"877f240e-d713-4c38-be37-d672e336667c"],
Cell[78278, 2117, 166, 3, 35, "Text",ExpressionUUID->"0b7b8e83-5e36-4747-8a56-f353c7daecc3"],
Cell[78447, 2122, 820, 19, 73, "Input",ExpressionUUID->"3fa74e41-6e0e-49f2-b8fb-1396cee281bc"],
Cell[79270, 2143, 229, 6, 35, "Text",ExpressionUUID->"092fed49-f796-4879-bcab-9327b58f04df"],
Cell[79502, 2151, 1468, 33, 136, "Input",ExpressionUUID->"34d74cfb-99b0-498b-ac19-6e345bdf2ba1"],
Cell[80973, 2186, 234, 5, 30, "Input",ExpressionUUID->"2ca2a4c5-d2ae-48f0-ab26-1479808a9cd5"],
Cell[81210, 2193, 1135, 26, 115, "Input",ExpressionUUID->"ce2ae826-348c-46b3-96a5-e035dcd8b5d8"]
}, Open  ]]
}
]
*)

